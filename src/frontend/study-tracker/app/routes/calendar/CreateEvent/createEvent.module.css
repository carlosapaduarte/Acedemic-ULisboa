@import "../../../components/Button/button.module.css";
@import "../../../components/FormModal/formModal.module.css";

.newEventModalContainer {
  composes: modalContainer;
}

.newEventTitleText {
  composes: mainFormModalTitleText;
}

.newEventFormContainer {
  composes: formContainer;
}

.newEventForm {
  composes: form;
}

.finishCreatingEventButtonContainer {
  padding: 0 1rem;
  display: flex;
  flex-direction: row;
  gap: 1rem;
  justify-content: space-between;
  flex-wrap: wrap;
}

.finishCreatingEventButton {
  composes: roundButton;
  flex: 1 1 50%;
  height: 2rem;
  margin-top: 0.5rem;
  font-size: 1rem;
  text-align: center;
}

.deleteEventButton {
  composes: roundButton;
  flex: 1 1 30%;
  height: 2rem;
  margin-top: 0.5rem;
  font-size: 1rem;
  text-align: center;
  background-color: var(--color-text-danger);
  color: var(--text-color-2);
}

.deleteEventButton:hover {
  background-color: var(--color-text-danger-hover);
}

.formTextField {
  display: flex;
  flex-direction: column;
}

.tagsSectionContainer {
  display: flex;
  flex-direction: column;
}

.recurrentEventSectionContainer {
  display: flex;
  flex-direction: column;
}

.recurrentEventSectionCheckboxField {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
}

.checkboxInput {
  width: 2rem;
}
.closeButton {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 2rem;
  width: 5rem;
}

/*dropdown recorrencia*/
.nativeSelect {
  width: 100%;
  padding: 10px;
  border: 1px solid var(--color-2);
  border-radius: 6px;
  background-color: var(--color-1);
  color: var(--text-color-1);
  font-family: var(--font-family1), sans-serif;
  font-size: 1rem;
  cursor: pointer;
  box-sizing: border-box;
  height: 40px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%3E%3Cpath%20fill%3D%22var(--text-color-1)%22%20d%3D%22M10%2C13.5L5.5%2C9h9L10%2C13.5z%22%2F%3E%3C%2Fsvg%3E");
  background-repeat: no-repeat;
  background-position: right 10px center;
  background-size: 15px;
}

/* --- TAGS --- */

.tagsContent {
  background-color: var(--color-3);
  padding: 1rem;
  border-radius: 0.5rem;
  border: none;
  display: flex;
  flex-wrap: wrap;
  border: 2px solid var(--color-2);
}

.tagListContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.tagListAndCreateContainer {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 10px;
  flex-grow: 1;
}

.tagItem {
  position: relative;
  display: inline-flex;
  align-items: center;
  border-radius: 5px;
  background-color: var(--color-2);
  color: var(--text-color-2);
  padding: 0.5rem 1rem;
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease;
  text-transform: uppercase;
  font-family: var(--font-family1), sans-serif;
  font-size: 1rem;
  font-weight: 500;
}

.tagItem:hover {
  background-color: var(--color-2-hover);
}

.selectedTagItem {
  background-color: var(--color-4);
}

.selectedTagItem:hover {
  background-color: var(--color-4-hover);
}

.deleteTagButton {
  position: absolute;
  top: -5px;
  right: -5px;
  background-color: var(--color-text-danger);
  color: var(--text-color-2);
  border: none;
  cursor: pointer;
  font-size: 0.8em;
  padding: 0;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
  transition: background-color 0.2s ease;
  z-index: 10;
}

.deleteTagButton:hover {
  background-color: var(--color-text-danger-hover);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
}

.createTagInputAndButtonContainer {
  display: flex;
  align-items: center;
  flex-grow: 1;
  min-width: 200px;
  max-width: 100%;
  gap: 8px;
}

.createTagInput {
  flex-grow: 1;
  min-width: 120px;
  padding: 0.5rem 0.75rem;
  background-color: var(--color-1);
  color: var(--text-color-1);
  border: 1px solid var(--color-3);
  border-radius: 5px;
}

.createTagInput:focus {
  outline: none;
  box-shadow: 0 2px 4px var(--color-1);
}

.addTagButtonRound {
  width: 35px;
  height: 35px;
  font-size: 1.5rem;
  background-color: var(--color-4);
  border-radius: 5px;
  color: var(--text-color-2);
  align-items: center;
  justify-content: center;
}

.addTagButtonRound:hover {
  background-color: var(--color-4-hover);
}

.creatingTagMessage,
.tagErrorMessage {
  color: var(--color-text-danger);
  font-size: 0.9em;
  text-align: center;
}
